// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  externalId String?  @unique
  quotaLimit Int
  plan       Plan     @default(FREE)
  email      String   @unique
  apiKey     String   @unique @default(cuid())
  discordId  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  EventCategories EventCategory[]
  events          Event[]
  Quota           Quota[]

  @@index([email, apiKey])
}

model EventCategory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  color     Int
  emoji     String?
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]

  @@unique([name, userId])
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  FAILED
}

model Event {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  formattedMessage String
  user             User           @relation(fields: [userId], references: [id])
  userId           String         @db.ObjectId
  name             String
  fields           Json
  deliveryStatus   DeliveryStatus @default(PENDING)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  eventCategory    EventCategory  @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId  String         @db.ObjectId

  @@index([createdAt])
}

model Quota {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  year      Int
  month     Int
  count     Int      @default(0)
  updatedAt DateTime @updatedAt
}
